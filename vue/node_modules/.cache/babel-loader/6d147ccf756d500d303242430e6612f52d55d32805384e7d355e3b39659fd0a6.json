{"ast":null,"code":"export default {\n  name: \"User\",\n  data() {\n    return {\n      available: false,\n      tableData: [],\n      // 所有用户的数据\n      categoryData: [],\n      // 所用的分类信息\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      fromVisible: false,\n      currentUser: {},\n      // 点击停用的用户\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        roleId: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }]\n      },\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      queryCondition: {\n        username: null,\n        enableStatus: null\n      },\n      textbookData: [],\n      // 查询到的所有信息都存在\n      textbookIds: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadUser();\n    this.selectCategory();\n  },\n  methods: {\n    loadUser() {\n      this.$request.get('/user/selectAll').then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data;\n        } else {\n          this.$message.error(res, msg);\n        }\n      });\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/user/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.queryCondition.username,\n          enableStatus: this.queryCondition.enableStatus\n        }\n      }).then(res => {\n        this.userData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    // 用户按钮的可用与不可用\n    loadOrderStatus() {\n      if (this.available === true) {\n        this.queryCondition.enableStatus = '1';\n        this.load(1);\n      } else {\n        this.queryCondition.enableStatus = null;\n        this.load(1);\n      }\n    },\n    handleAdd() {\n      // 新增教材数据数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 停用账号\n      this.$confirm('你确定当前的操作吗', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.currentUser = JSON.parse(JSON.stringify(row)); // 给这个用户停用或者启用\n\n        if (this.currentUser.enableStatus === '1') {\n          this.currentUser.enableStatus = '0';\n        } else {\n          this.currentUser.enableStatus = '1';\n        }\n        this.$request.put(\"/user/setStatus\", this.currentUser).then(res => {\n          if (res.code === '200') {\n            this.$message.success('操作成功');\n            this.load(1);\n            location.reload();\n          }\n        });\n      }).catch(() => {});\n    },\n    order(row) {\n      // 发起征订\n      if (row.orderStatus !== '1') {\n        this.$message.error(\"暂不可征订\");\n      } else {\n        this.$message.success(\"可以征订\");\n      }\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          this.$request.post(\"/user/addUser\", this.form).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    selectCategory() {\n      // 查询分类信息的方法 在点击编辑和新增的时候调用\n      this.$request.get('/category/selectAll').then(res => {\n        this.categoryData = res.data;\n      });\n    },\n    del(textbookId) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/textbook/deleteById/' + textbookId).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('删除成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {\n        this.load(1);\n      });\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.textbookIds = rows.map(v => v.textbookId); //  [1,2]\n    },\n\n    reset() {\n      this.queryCondition.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    // 上传文件的方法\n    handleBookCoverSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.bookCover = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","available","tableData","categoryData","pageNum","pageSize","total","fromVisible","currentUser","form","rules","username","required","message","trigger","password","roleId","user","JSON","parse","localStorage","getItem","queryCondition","enableStatus","textbookData","textbookIds","created","load","loadUser","selectCategory","methods","$request","get","then","res","code","$message","error","msg","params","userData","list","loadOrderStatus","handleAdd","handleEdit","row","$confirm","type","response","stringify","put","success","location","reload","catch","order","orderStatus","save","$refs","validate","valid","post","del","textbookId","delete","handleSelectionChange","rows","map","v","reset","handleCurrentChange","handleBookCoverSuccess","file","fileList","bookCover"],"sources":["src/views/manager/User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入用户名\" style=\"width: 200px\"\r\n                v-model=\"queryCondition.username\">\r\n      </el-input>\r\n\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n\r\n      <el-button style=\"margin-left: 10px\" v-if=\"user.roleName ==='ADMIN' \" type=\"primary\" plain\r\n                 size=\"default\" @click=\"handleAdd\">新增用户</el-button>\r\n      <el-button type=\"primary\" plain style=\"height: 38px\" size=\"mini\">\r\n        <el-switch style=\"margin-left: 10px;font-size: 100px; rgb(17, 169, 131))\"\r\n                   v-model=\"available\"\r\n                   active-text=\"可用\"\r\n                   @change=\"loadOrderStatus\">\r\n       </el-switch>\r\n      </el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"userData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\"idth=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"userId\" label=\"序号\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column label=\"头像\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 30px; height: 40px; border-radius: 0\" v-if=\"scope.row.avatar\"\r\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"用户名\" show-overflow-tooltip align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"realName\" label=\"姓名\" show-overflow-tooltip align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"电子邮件\" show-overflow-tooltip align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"phoneNumber\" label=\"电话\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"roleName\" label=\"角色\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"registrationDate\" label=\"注册时间\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"enableStatus\" label=\"启用状态\" align=\"center\">\r\n          <template v-slot=\"{ row }\">\r\n            <span v-if=\"row.enableStatus === '1' \">已启用</span>\r\n            <span v-else-if=\"row.enableStatus === '0' \">未启用</span>\r\n            <span v-else>未启用</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button v-if=\"scope.row.enableStatus ==='0'\" plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">启用</el-button>\r\n            <el-button v-if=\"scope.row.enableStatus ==='1'\" plain type=\"danger\"  @click=\"handleEdit(scope.row)\" size=\"mini\">停用</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!--       分页-->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[1, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog title=\"\" name=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"100px\" style=\"padding-right: 50px;\">\r\n        <el-form-item label=\"头像\">\r\n          <div >\r\n            <el-upload\r\n                list-type=\"picture-card\"\r\n                :action=\"$baseUrl + '/files/upload'\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleBookCoverSuccess\"\r\n            >\r\n              <img style=\"width: 148px; height: 148px\" v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\" />\r\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"用户名\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"form.password\"  placeholder=\"初始密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item  label=\"角色\" prop=\"roleId\">\r\n          <el-select v-model=\"form.roleId\" filterable=\"true\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n            <!-- key唯一表示 label展示值 value 传递的实际值-->\r\n            <el-option label=\"管理员\" value=\"1\"></el-option>\r\n            <el-option label=\"教师\" value=\"2\"></el-option>\r\n            <el-option label=\"系主任\" value=\"3\"></el-option>\r\n            <el-option label=\"教务处\" value=\"4\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"save\">保 存</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"User\",\r\n  data() {\r\n    return {\r\n      available: false,\r\n      tableData: [],  // 所有用户的数据\r\n      categoryData: [], // 所用的分类信息\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      fromVisible: false,\r\n      currentUser: {}, // 点击停用的用户\r\n      form: {},\r\n      rules: {\r\n        username: [{\r\n          required: true, message: '请输入用户名', trigger: 'blur',\r\n        }],\r\n        password: [{\r\n          required: true, message: '请输入密码', trigger: 'blur',\r\n        }],\r\n        roleId: [{\r\n          required: true, message: '请选择角色', trigger: 'blur',\r\n        }]\r\n\r\n      },\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n\r\n      queryCondition: {\r\n        username:null ,\r\n        enableStatus: null\r\n      },\r\n\r\n      textbookData: [], // 查询到的所有信息都存在\r\n      textbookIds: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadUser()\r\n    this.selectCategory()\r\n  },\r\n  methods: {\r\n    loadUser() {\r\n      this.$request.get('/user/selectAll').then(res =>{\r\n        if(res.code === '200') {\r\n          this.tableData = res.data\r\n        } else {\r\n          this.$message.error(res,msg)\r\n        }\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n\r\n      this.$request.get('/user/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          username: this.queryCondition.username,\r\n          enableStatus: this.queryCondition.enableStatus\r\n        },\r\n      }).then(res => {\r\n        this.userData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n\r\n    // 用户按钮的可用与不可用\r\n    loadOrderStatus() {\r\n      if(this.available === true){\r\n        this.queryCondition.enableStatus = '1'\r\n        this.load(1)\r\n      }\r\n      else {\r\n        this.queryCondition.enableStatus = null\r\n        this.load(1)\r\n      }\r\n    },\r\n    handleAdd() {   // 新增教材数据数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n\r\n    },\r\n    handleEdit(row) {   // 停用账号\r\n      this.$confirm('你确定当前的操作吗', '确认操作', {type: \"warning\"}).then(response =>{\r\n        this.currentUser = JSON.parse(JSON.stringify(row))  // 给这个用户停用或者启用\r\n\r\n      if (this.currentUser.enableStatus === '1'){\r\n        this.currentUser.enableStatus = '0'\r\n      }else {\r\n        this.currentUser.enableStatus = '1'\r\n      }\r\n     this.$request.put(\"/user/setStatus\",this.currentUser).then(res => {\r\n       if (res.code === '200'){\r\n         this.$message.success('操作成功')\r\n         this.load(1)\r\n         location.reload()\r\n       }\r\n     })}).catch(()=>{\r\n\r\n      })\r\n    },\r\n    order(row) {\r\n      // 发起征订\r\n      if (row.orderStatus !== '1'){\r\n        this.$message.error(\"暂不可征订\")\r\n      }else {\r\n        this.$message.success(\"可以征订\")\r\n      }\r\n\r\n\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          this.$request.post(\"/user/addUser\",this.form).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    selectCategory(){ // 查询分类信息的方法 在点击编辑和新增的时候调用\r\n      this.$request.get('/category/selectAll').then(res => {\r\n        this.categoryData = res.data\r\n      })\r\n    },\r\n    del(textbookId) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/textbook/deleteById/' + textbookId).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('删除成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.load(1)\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.textbookIds = rows.map(v => v.textbookId)   //  [1,2]\r\n    },\r\n    reset() {\r\n      this.queryCondition.username = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    // 上传文件的方法\r\n    handleBookCoverSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.bookCover = response.data\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}