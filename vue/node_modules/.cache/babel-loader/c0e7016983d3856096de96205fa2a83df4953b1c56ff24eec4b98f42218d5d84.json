{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      activeName: 'username',\n      usernameForm: {},\n      emailForm: {},\n      usernameRules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      emailRules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\w+((.\\w+)|(-\\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/,\n          message: '邮箱格式不正确',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      let form = [];\n      let userForm = [];\n      let URL = null;\n      if (this.activeName === 'usernameformRef') {\n        form = 'usernameformRef';\n        userForm = this.usernameForm;\n        URL = '/login';\n      } else {\n        form = 'emailformRef';\n        userForm = this.emailForm;\n        URL = '/loginEmail';\n      }\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post(URL, userForm).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // 用邮箱登录\n    changeLoginMethod() {\n      this.activenName = 'email';\n    },\n    sendEmailCode() {\n      // 发送邮箱验证码\n      this.$request.post(\"/email/\" + this.emailForm.email).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"发送成功\");\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeName","usernameForm","emailForm","usernameRules","username","required","message","trigger","password","emailRules","email","pattern","code","created","methods","login","form","userForm","URL","$refs","validate","valid","$request","post","then","res","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","changeLoginMethod","activenName","sendEmailCode"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 10px; color: #333\">欢迎使用</div>\r\n\r\n      <el-tabs v-model=\"activeName\">\r\n        <el-tab-pane label=\"账号密码登录\" name=\"username\">\r\n          <el-form :model=\"usernameForm\" :rules=\"usernameRules\" ref=\"usernameformRef\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"usernameForm.username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"usernameForm.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"login\">登 录</el-button>\r\n            </el-form-item>\r\n            <div style=\"display: flex; align-items: center\">\r\n              <div style=\"flex: 1\"></div>\r\n              <div style=\"flex: 1; text-align: right\">\r\n                还没有账号？请 <a href=\"/register\">注册</a>\r\n              </div>\r\n            </div>\r\n          </el-form>\r\n        </el-tab-pane>\r\n\r\n        <el-tab-pane label=\"邮箱登录\" name=\"email\">\r\n          <el-form :model=\"emailForm\" :rules=\"emailRules\" ref=\"emailformRef\">\r\n            <el-form-item prop=\"email\">\r\n              <el-input prefix-icon=\"el-icon-message\" placeholder=\"请输入邮箱\" v-model=\"emailForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"code\">\r\n              <el-input style=\"width: 190px;\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入验证码\" show-password  v-model=\"emailForm.code\"></el-input>\r\n              <el-button style=\"margin-left: 20px;\" type=\"primary\" size=\"small\"  @click=\"sendEmailCode()\">获取验证码</el-button>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"login\">登 录</el-button>\r\n            </el-form-item>\r\n            <div style=\"display: flex; align-items: center\">\r\n              <div style=\"flex: 1\"></div>\r\n              <div style=\"flex: 1; text-align: right\">\r\n                还没有账号？请 <a href=\"/register\">注册</a>\r\n              </div>\r\n            </div>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      activeName: 'username',\r\n      usernameForm: {},\r\n      emailForm: {},\r\n      usernameRules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ]\r\n      },\r\n      emailRules: {\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { pattern: /^\\w+((.\\w+)|(-\\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/, message: '邮箱格式不正确', trigger: 'blur' }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      let form = [];\r\n      let userForm = [];\r\n      let URL = null;\r\n      if (this.activeName === 'usernameformRef'){\r\n        form = 'usernameformRef'\r\n        userForm = this.usernameForm\r\n        URL = '/login'\r\n      }else {\r\n        form = 'emailformRef'\r\n        userForm = this.emailForm\r\n        URL = '/loginEmail'\r\n      }\r\n      this.$refs[form].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post(URL, userForm).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 用邮箱登录\r\n    changeLoginMethod() {\r\n      this.activenName = 'email'\r\n    },\r\n    sendEmailCode() {\r\n      // 发送邮箱验证码\r\n      this.$request.post(\"/email/\" + this.emailForm.email).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"发送成功\")\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":";AAqDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,YAAA;MACAC,SAAA;MACAC,aAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,UAAA;QACAC,KAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,OAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA,EACA;QACAK,IAAA,GACA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAGA;IACA;EACA;EACAM,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,IAAAC,IAAA;MACA,IAAAC,QAAA;MACA,IAAAC,GAAA;MACA,SAAAlB,UAAA;QACAgB,IAAA;QACAC,QAAA,QAAAhB,YAAA;QACAiB,GAAA;MACA;QACAF,IAAA;QACAC,QAAA,QAAAf,SAAA;QACAgB,GAAA;MACA;MACA,KAAAC,KAAA,CAAAH,IAAA,EAAAI,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,CAAAL,GAAA,EAAAD,QAAA,EAAAO,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAb,IAAA;cACAc,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAA1B,IAAA;cACA,KAAA+B,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC,kBAAA;MACA,KAAAC,WAAA;IACA;IACAC,cAAA;MACA;MACA,KAAAhB,QAAA,CAAAC,IAAA,kBAAArB,SAAA,CAAAQ,KAAA,EAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAb,IAAA;UACA,KAAAoB,QAAA,CAAAC,OAAA;QACA;UACA,KAAAD,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}